name: JaapRam CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'
    
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        cd ram_naam_jaap
        pip install -r requirements.txt
        pip install pytest-cov
    
    - name: Run Tests
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
        DJANGO_ENV: test
        SECRET_KEY: test-secret-key
        REDIS_URL: redis://localhost:6379/0
      run: |
        cd ram_naam_jaap
        python manage.py test
        pytest --cov=./ --cov-report=xml
    
    - name: Upload Coverage Report
      uses: codecov/codecov-action@v1
      with:
        file: ./ram_naam_jaap/coverage.xml
  
  deploy:
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    
    steps:
    - name: Executing remote deployment commands
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /var/www/jaapram
          git pull
          source venv/bin/activate
          cd ram_naam_jaap
          pip install -r requirements.txt
          python manage.py migrate
          python manage.py collectstatic --no-input
          sudo systemctl restart jaapram 